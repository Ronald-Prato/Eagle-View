{"version":3,"file":"static/webpack/static/development/pages/index.js.877b1ccec7ae6ebf4cd2.hot-update.js","sources":["webpack:///./components/SlideOptions.js","webpack:///./components/containers/Layout.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/values.js","webpack:///./node_modules/core-js/library/fn/object/values.js","webpack:///./node_modules/core-js/library/modules/_object-to-array.js","webpack:///./node_modules/core-js/library/modules/es7.object.values.js"],"sourcesContent":["import { useContext, useState } from 'react'\r\nimport Context from '../store/context';\r\nimport { Menu, Icon, Button } from 'antd';\r\n\r\n// CSS Import \r\nimport '../styles/SlideOptions.css'\r\n\r\nconst { SubMenu } = Menu;\r\nconst env_names = []\r\nfor (let i = 1; i < 16; i++) {\r\n    env_names.push(`Ambiente ${i}`)\r\n}\r\n\r\nconst SlideOptions = () => {\r\n    const { state, actions } = useContext(Context)\r\n    const options = ['Descripcion', 'Conexiones', 'Fuente', 'Campos']\r\n    const handleClick = () => console.log(\"E\")\r\n\r\n    const createTable = param => () => {\r\n        Object.keys(param) === options[0]\r\n            ?\r\n            actions({ type: 'set-new-state', payload: { ...state, option_to_load: Object.values(param) } })\r\n            :\r\n            alert(\"Ha ocurrido un error\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"slide-options-container\">\r\n\r\n\r\n            {\r\n                env_names.map((x, i) =>\r\n                    <Menu\r\n                        onClick={handleClick}\r\n                        style={{ width: 256 }}\r\n                        defaultSelectedKeys={['1']}\r\n                        //defaultOpenKeys={['sub1']}\r\n                        mode=\"inline\"\r\n                        selectable=\"false\"\r\n                    >\r\n                        <SubMenu\r\n                            key={`sub${i + 1}`}\r\n                            title={\r\n                                <span>\r\n                                    <Icon type=\"cloud-server\" />\r\n                                    <span>{x}</span>\r\n                                </span>\r\n                            }\r\n                        >\r\n                            {\r\n                                options.map((y, j) =>\r\n                                    <div style={{ width: '100%' }} className=\"d-flex justify-content-center\">\r\n                                        <div className=\"button-option-container\">\r\n                                            <Button onClick={createTable({ [y]: i })} key={j} block>{y}</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n\r\n                        </SubMenu>\r\n                    </Menu>\r\n                )\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SlideOptions","import axios from 'axios';\r\nimport { useEffect, useContext } from 'react'\r\nimport Context from '../../store/context'\r\nimport MainScreen from '../views/MainScreen'\r\n\r\n\r\nconst url = \"http://localhost:4042/data\"\r\n\r\nconst Layout = () => {\r\n    const { state, actions } = useContext(Context)\r\n    const r = true;\r\n    useEffect(async () => {\r\n        const r = await axios.get(url).then(res => {\r\n            actions({ type: 'set-new-state', payload: { ...state, data: res.data } })\r\n        }).then(() => true)\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <MainScreen />\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Layout","module.exports = require(\"core-js/library/fn/object/values\");","require('../../modules/es7.object.values');\nmodule.exports = require('../../modules/_core').Object.values;\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AANA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAKA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAnBA;AAoCA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAJA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;AC3BA;;;;;;;;;;;ACAA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}