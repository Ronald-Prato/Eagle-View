{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/multi/Desktop/Develop/React/Woombat/eagle-view/components/Table.js\";\nimport React from \"react\";\n// import { useContext, useEffect, useState } from 'react'\n// import Context from '../store/context'\n// import useGlobalState from '../store/useGlobalState';\n// import '../styles/Table.css'\n// import { Table } from 'antd'\n// const columns = [];\n// const subdata = {};\n// const data = [];\n// const SingleTable = props => {\n//     const { state, actions } = useContext(Context);\n//     const [showTable, setShowingTable] = useState(false)\n//     useEffect(async () => {\n//         const Data = state.data[props.option]\n//         Object.keys(Data).map(x => { columns.push({ title: x, dataIndex: x.toLowerCase() }) })\n//         await columns.shift()\n//         await columns.map(x => {\n//             subdata[x.dataIndex] = Data[x.title]\n//         })\n//         await Object.assign(subdata, { key: '1' })\n//         await data.push(subdata)\n//         await console.log(\"columns => \", columns)\n//         await console.log(data)\n//         await setShowingTable(true)\n//     }, {})\n//     return (\n//         <div className=\"table-container\">\n//             <Table className=\"table\" columns={columns} dataSource={data} />\n//         </div>\n//     )\n// }\n// export default SingleTable\nimport { useContext, useEffect, useState } from 'react';\nimport Context from '../store/context';\nimport useGlobalState from '../store/useGlobalState';\nimport '../styles/Table.css';\nimport { Table } from 'antd';\nimport { ParseData } from './Scripts/ParseData';\n\nvar SingleTable = function SingleTable(props) {\n  var _useContext = useContext(Context),\n      state = _useContext.state,\n      actions = _useContext.actions;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showTable = _useState2[0],\n      setShowingTable = _useState2[1]; // useEffect(async () => {\n  //     const Data = state.data[props.option]\n  //     Object.keys(Data).map(x => { columns.push({ title: x, dataIndex: x.toLowerCase() }) })\n  //     await columns.shift()\n  //     await columns.map(x => {\n  //         subdata[x.dataIndex] = Data[x.title]\n  //     })\n  //     await Object.assign(subdata, { key: '1' })\n  //     await data.push(subdata)\n  //     await console.log(\"columns => \", columns)\n  //     await console.log(data)\n  //     await setShowingTable(true)\n  // }, {})\n\n\n  return React.createElement(\"div\", {\n    className: \"table-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: \"table\",\n    columns: ParseData.TableData[0],\n    dataSource: ParseData.TableData[1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }));\n};\n\nexport default SingleTable;","map":{"version":3,"sources":["/mnt/c/Users/multi/Desktop/Develop/React/Woombat/eagle-view/components/Table.js"],"names":["useContext","useEffect","useState","Context","useGlobalState","Table","ParseData","SingleTable","props","state","actions","showTable","setShowingTable","TableData"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAO,qBAAP;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,SAAT,QAA0B,qBAA1B;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAAA,oBACER,UAAU,CAACG,OAAD,CADZ;AAAA,MACjBM,KADiB,eACjBA,KADiB;AAAA,MACVC,OADU,eACVA,OADU;;AAAA,kBAEYR,QAAQ,CAAC,KAAD,CAFpB;AAAA;AAAA,MAElBS,SAFkB;AAAA,MAEPC,eAFO,kBAIzB;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;;;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAEN,SAAS,CAACO,SAAV,CAAoB,CAApB,CAAlC;AAA0D,IAAA,UAAU,EAAEP,SAAS,CAACO,SAAV,CAAoB,CAApB,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CA/BD;;AAkCA,eAAeN,WAAf","sourcesContent":["// import { useContext, useEffect, useState } from 'react'\r\n// import Context from '../store/context'\r\n// import useGlobalState from '../store/useGlobalState';\r\n// import '../styles/Table.css'\r\n// import { Table } from 'antd'\r\n\r\n// const columns = [];\r\n// const subdata = {};\r\n// const data = [];\r\n\r\n\r\n// const SingleTable = props => {\r\n//     const { state, actions } = useContext(Context);\r\n//     const [showTable, setShowingTable] = useState(false)\r\n\r\n//     useEffect(async () => {\r\n//         const Data = state.data[props.option]\r\n//         Object.keys(Data).map(x => { columns.push({ title: x, dataIndex: x.toLowerCase() }) })\r\n\r\n//         await columns.shift()\r\n\r\n//         await columns.map(x => {\r\n//             subdata[x.dataIndex] = Data[x.title]\r\n//         })\r\n\r\n//         await Object.assign(subdata, { key: '1' })\r\n//         await data.push(subdata)\r\n\r\n\r\n//         await console.log(\"columns => \", columns)\r\n//         await console.log(data)\r\n\r\n//         await setShowingTable(true)\r\n//     }, {})\r\n\r\n\r\n\r\n//     return (\r\n//         <div className=\"table-container\">\r\n//             <Table className=\"table\" columns={columns} dataSource={data} />\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\n// export default SingleTable\r\n\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport Context from '../store/context'\r\nimport useGlobalState from '../store/useGlobalState';\r\nimport '../styles/Table.css'\r\nimport { Table } from 'antd'\r\nimport { ParseData } from './Scripts/ParseData'\r\n\r\n\r\nconst SingleTable = props => {\r\n    const { state, actions } = useContext(Context);\r\n    const [showTable, setShowingTable] = useState(false)\r\n\r\n    // useEffect(async () => {\r\n    //     const Data = state.data[props.option]\r\n    //     Object.keys(Data).map(x => { columns.push({ title: x, dataIndex: x.toLowerCase() }) })\r\n\r\n    //     await columns.shift()\r\n\r\n    //     await columns.map(x => {\r\n    //         subdata[x.dataIndex] = Data[x.title]\r\n    //     })\r\n\r\n    //     await Object.assign(subdata, { key: '1' })\r\n    //     await data.push(subdata)\r\n\r\n\r\n    //     await console.log(\"columns => \", columns)\r\n    //     await console.log(data)\r\n\r\n    //     await setShowingTable(true)\r\n    // }, {})\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"table-container\">\r\n            <Table className=\"table\" columns={ParseData.TableData[0]} dataSource={ParseData.TableData[1]} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SingleTable"]},"metadata":{},"sourceType":"module"}