{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { useState } from 'react';\nvar State = {\n  data: [],\n  option_to_load: null\n};\n\nvar useGlobalState = function useGlobalState() {\n  var _useState = useState(State),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var actions = function actions(action) {\n    var type = action.type,\n        payload = action.payload;\n\n    switch (type) {\n      case \"set-new-state\":\n        {\n          return setState(payload);\n        }\n\n      case \"check-state\":\n        {\n          console.log(state);\n        }\n\n      default:\n        return state;\n    }\n  };\n\n  return {\n    state: state,\n    actions: actions\n  };\n};\n\nexport default useGlobalState;","map":{"version":3,"sources":["/mnt/c/Users/multi/Desktop/Develop/React/Woombat/eagle-view/store/useGlobalState.js"],"names":["useState","State","data","option_to_load","useGlobalState","state","setState","actions","action","type","payload","console","log"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE,EADI;AAEVC,EAAAA,cAAc,EAAE;AAFN,CAAd;;AAKA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,kBACCJ,QAAQ,CAACC,KAAD,CADT;AAAA;AAAA,MAClBI,KADkB;AAAA,MACXC,QADW;;AAGzB,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,MAAM,EAAI;AAAA,QACdC,IADc,GACID,MADJ,CACdC,IADc;AAAA,QACRC,OADQ,GACIF,MADJ,CACRE,OADQ;;AAGtB,YAAQD,IAAR;AACI,WAAK,eAAL;AAAsB;AAAE,iBAAOH,QAAQ,CAACI,OAAD,CAAf;AAA0B;;AAClD,WAAK,aAAL;AAAoB;AAAEC,UAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AAAoB;;AAC1C;AAAS,eAAOA,KAAP;AAHb;AAKH,GARD;;AASA,SAAO;AAAEA,IAAAA,KAAK,EAALA,KAAF;AAASE,IAAAA,OAAO,EAAPA;AAAT,GAAP;AACH,CAbD;;AAeA,eAAeH,cAAf","sourcesContent":["import { useState } from 'react'\r\n\r\nconst State = {\r\n    data: [],\r\n    option_to_load: null\r\n}\r\n\r\nconst useGlobalState = () => {\r\n    const [state, setState] = useState(State)\r\n\r\n    const actions = action => {\r\n        const { type, payload } = action\r\n\r\n        switch (type) {\r\n            case \"set-new-state\": { return setState(payload) }\r\n            case \"check-state\": { console.log(state) }\r\n            default: return state;\r\n        }\r\n    }\r\n    return { state, actions }\r\n}\r\n\r\nexport default useGlobalState"]},"metadata":{},"sourceType":"module"}